{"version":3,"sources":["components/Pagination/pagination.module.css","components/Card/card.module.css","components/Common/NotFound/notFound.module.css","components/Planet/planet.module.css","components/Common/Preloader/preloader.module.css","api/api.js","Redux/card-reducer.js","Redux/pagination-reducer.js","assets/images/defaultPlanet.jpg","components/Common/Image/Image.jsx","assets/scripts/planetPopulation.js","components/Card/Card.jsx","assets/images/loader.svg","components/Common/Preloader/Preloader.jsx","assets/images/notFound.jpg","components/Common/NotFound/NotFound.jsx","components/Pagination/Pagination.jsx","components/Card/CardContainer.jsx","Redux/planet-reducer.js","components/Planet/Planet.jsx","components/Planet/PlanetContainer.jsx","App.js","reportWebVitals.js","Redux/redux-store.js","index.js"],"names":["module","exports","instance","axios","baseURL","starWarsAPI","page","get","then","response","data","id","url","map","u","residentsName","res","push","name","INITIALIZED_PLANETS","CLEAR_STORE","initialState","planets","initializedPlanets","type","requestPlanets","dispatch","catch","error","results","console","cardReducer","state","action","SET_CURRENT_PAGE","currentPage","undefined","setCurrentPage","paginationReducer","CustomImage","src","srcOnError","rest","onError","e","target","planetPopulation","value","suffixNum","Math","floor","length","shortValue","precision","parseFloat","pow","toPrecision","replace","toFixed","Card","props","className","classes","wrapper","i","card","to","card__img","defaultImage","alt","card__container","climate","population","Preloader","loader","NotFoundComponent","notFound","notFound__img","notFound__text","connect","pagination","clearStore","pagesCount","ceil","count","pages","next","Number","previous","arrowLeft","disableArrow","onClick","pagesList","selectedPage","arrowRight","WithUrlDataContainerComponent","withRouter","useEffect","match","params","NotFound","INITIALIZED_CURRENT_PLANET","INITIALIZED_RESIDENTS","currentPlanet","info","initializedCurrentPlanet","initializedResidents","residents","planetReducer","Planet","planet","planet__img","planet__description","rotation_period","gravity","terrain","requestCurrentPlanetThunkCreator","erorr","App","path","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0b6c419a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"pagination_wrapper__26hzU\",\"arrowLeft\":\"pagination_arrowLeft__2uLk8\",\"arrowRight\":\"pagination_arrowRight__3hNEp\",\"disableArrow\":\"pagination_disableArrow__17IKG\",\"pagesList\":\"pagination_pagesList__2TJ3k\",\"selectedPage\":\"pagination_selectedPage__3Kzvh\",\"but\":\"pagination_but__3f6EE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"card_wrapper__2CN-D\",\"card\":\"card_card__2zaB9\",\"card__img\":\"card_card__img__9jtbq\",\"card__container\":\"card_card__container__127sY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notFound\":\"notFound_notFound__RV_Og\",\"notFound__img\":\"notFound_notFound__img__3QhPn\",\"notFound__text\":\"notFound_notFound__text__dy3D9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"planet\":\"planet_planet__1NEQ2\",\"planet__img\":\"planet_planet__img__3oUdH\",\"planet__description\":\"planet_planet__description__i7nnP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"preloader_loader__2jg-c\"};","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://swapi.dev/api/'\r\n});\r\n\r\n\r\nexport const starWarsAPI = {\r\n    getPlanets(page = 1) {\r\n        return instance.get(`planets/?page=${page}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    getCurrentPlanet(id) {\r\n        return instance.get(`planets/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n\r\n    getResidents(url) {\r\n        return axios.all(url.map(u => axios.get(u)))\r\n            .then(axios.spread((...res) => {\r\n                let residentsName = [];\r\n                res.map(u => {\r\n                    residentsName.push(u.data.name);\r\n                })\r\n                return residentsName;\r\n            }))\r\n    }\r\n}","import { starWarsAPI } from \"../api/api\";\r\n\r\nconst INITIALIZED_PLANETS = 'INITIALIZED_PLANETS';\r\nconst CLEAR_STORE = 'CLEAR_STORE';\r\n\r\nlet initialState = {\r\n    planets: []\r\n};\r\n\r\nconst cardReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_PLANETS:\r\n            return {\r\n                ...state,\r\n                planets: action.planets,\r\n            };\r\n        case CLEAR_STORE:\r\n            return {\r\n                ...state,\r\n                planets: [],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const clearStore = () => ({ type: CLEAR_STORE });\r\nexport const initializedPlanets = planets => ({ type: INITIALIZED_PLANETS, planets });\r\n\r\nexport const requestPlanets = (page) => {\r\n    return dispatch => {\r\n        starWarsAPI.getPlanets(page)\r\n            .then(data => { dispatch(initializedPlanets(data)) })\r\n            .catch(error => {\r\n                dispatch(initializedPlanets({ results: null }));\r\n                console.error(error);\r\n            });\r\n    }\r\n};\r\n\r\nexport default cardReducer;","const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\n\r\nlet initialState = {\r\n    currentPage: undefined\r\n};\r\n\r\nconst paginationReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setCurrentPage = currentPage => ({ type: SET_CURRENT_PAGE, currentPage });\r\n\r\n\r\nexport default paginationReducer;","export default __webpack_public_path__ + \"static/media/defaultPlanet.3cf9f93a.jpg\";","import React from 'react';\r\n\r\nconst CustomImage = ({ src, srcOnError, ...rest }) => {\r\n\r\n    let onError = (e) => {\r\n        e.target.src = srcOnError\r\n    }\r\n\r\n    return <img src={src} onError={(e) => onError(e)} {...rest} />;\r\n};\r\n\r\nexport default CustomImage;","export const planetPopulation = (value) => {\r\n    if (value >= 1000) {\r\n        const suffixes = [\"\", \"thousand\", \"million\", \"billion\",\"trillion\", \"quadrillion\"];\r\n        const suffixNum = Math.floor( (\"\"+value).length/3 );\r\n        let shortValue = '';\r\n        for (var precision = 2; precision >= 1; precision--) {\r\n            shortValue = parseFloat( (suffixNum !== 0 ? (value / Math.pow(1000,suffixNum) ) : value).toPrecision(precision));\r\n            var dotLessShortValue = (shortValue + '').replace(/[^a-zA-Z 0-9]+/g,'');\r\n            if (dotLessShortValue.length <= 2) { break; }\r\n        }\r\n        if (shortValue % 1 !== 0)  shortValue = shortValue.toFixed(1);\r\n        return  shortValue+\" \"+suffixes[suffixNum];\r\n    }\r\n    return value;\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport defaultImage from '../../assets/images/defaultPlanet.jpg';\r\nimport classes from \"./card.module.css\";\r\nimport CustomImage from '../Common/Image/Image';\r\nimport { planetPopulation } from \"../../assets/scripts/planetPopulation\";\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <>\r\n            <div className={classes.wrapper}>\r\n                {props.planets.map((u, i) => {\r\n                    let id = u.url.replace(/\\D+/g, \"\");\r\n                    return <div className={classes.card} key={i}>\r\n                        <NavLink to={`/planet/${id}`} >\r\n                            <CustomImage className={classes.card__img} src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} srcOnError={defaultImage} alt={u.name} />\r\n                            <div className={classes.card__container}>\r\n                                <h4>Name: {u.name}</h4>\r\n                                <div>Climate: {u.climate}</div>\r\n                                <div>Population: {planetPopulation(u.population)}</div>\r\n                            </div>\r\n                        </NavLink>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Card;","export default __webpack_public_path__ + \"static/media/loader.3c541d2b.svg\";","import React from \"react\";\r\nimport classes from './preloader.module.css';\r\nimport loader from '../../../assets/images/loader.svg';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={classes.loader}>\r\n            <img src={loader} alt=\"loader\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader;","export default __webpack_public_path__ + \"static/media/notFound.7bfe447d.jpg\";","import React from \"react\";\r\nimport notFound from \"../../../assets/images/notFound.jpg\"\r\nimport classes from './notFound.module.css';\r\n\r\nconst NotFoundComponent = () => {\r\n    return (\r\n        <div className={classes.notFound}>\r\n            <img className={classes.notFound__img} src={notFound} alt=\"Not Found\"/>\r\n            <div className={classes.notFound__text}>NOT FOUND</div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NotFoundComponent;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { requestPlanets, clearStore } from \"../../Redux/card-reducer\";\r\nimport { setCurrentPage } from \"../../Redux/pagination-reducer\";\r\nimport classes from './pagination.module.css';\r\n\r\nconst Pagination = props => {\r\n    let pagesCount = Math.ceil(props.count / props.length);\r\n    let pages = [];\r\n    let next = Number(props.currentPage) + 1;\r\n    let previous = Number(props.currentPage) - 1;\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n    return <div className={classes.wrapper}>\r\n        <NavLink className={`${classes.arrowLeft} ${previous <= 0 && classes.disableArrow}`} to={`/${previous}`} onClick={() => {\r\n                    props.requestPlanets(previous);\r\n                    props.setCurrentPage(previous);\r\n                    props.clearStore();\r\n                }}>\r\n        </NavLink>\r\n        <div className={classes.pagesList}>\r\n            {pages.map((u, i) => {\r\n                return <NavLink to={`/${u}`} className={Number(props.currentPage) === u ? classes.selectedPage : undefined} key={i} onClick={() => {\r\n                    props.requestPlanets(u);\r\n                    props.setCurrentPage(u);\r\n                    props.clearStore();\r\n                }}>\r\n                    <span>{u}</span>\r\n                </NavLink>\r\n            })}\r\n        </div>\r\n        <NavLink className={`${classes.arrowRight} ${Number(next) > Number(pagesCount) && classes.disableArrow}`} to={`/${next}`} onClick={() => {\r\n                    props.requestPlanets(next);\r\n                    props.setCurrentPage(next);\r\n                    props.clearStore();\r\n                }}>\r\n        </NavLink>\r\n    </div>\r\n\r\n}\r\n\r\nlet mapStateToProps = state => ({\r\n    currentPage: state.pagination.currentPage\r\n})\r\n\r\nexport default connect(mapStateToProps, { requestPlanets, setCurrentPage, clearStore })(Pagination);","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { requestPlanets } from \"../../Redux/card-reducer\";\r\nimport { setCurrentPage } from \"../../Redux/pagination-reducer\";\r\nimport Card from \"./Card\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport NotFoundComponent from \"../Common/NotFound/NotFound\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\n\r\nconst CardContainer = props => {\r\n    useEffect(() => {\r\n        props.requestPlanets(props.match.params.page);\r\n        props.setCurrentPage(props.match.params.page || 1);\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {(props.planets.results === undefined) ? <Preloader /> : props.planets.results === null ? <NotFoundComponent /> : <>\r\n                <Card planets={props.planets.results} />\r\n                <Pagination length={!props.planets.results ? 0 : props.planets.results.length} count={props.planets.count} />\r\n            </>}\r\n        </>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = state => ({\r\n    planets: state.planets.planets\r\n})\r\n\r\nlet WithUrlDataContainerComponent = withRouter(CardContainer);\r\n\r\nexport default connect(mapStateToProps, { requestPlanets, setCurrentPage })(WithUrlDataContainerComponent);","import { starWarsAPI } from \"../api/api\";\r\n\r\nconst INITIALIZED_CURRENT_PLANET = 'INITIALIZED_CURRENT_PLANET';\r\nconst INITIALIZED_RESIDENTS = 'INITIALIZED_RESIDENTS';\r\nconst CLEAR_STORE = 'CLEAR_STORE';\r\n\r\n\r\nlet initialState = {\r\n    currentPlanet: {\r\n        info: undefined,\r\n        residentsName: undefined\r\n    }\r\n};\r\n\r\nconst planetReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_CURRENT_PLANET:\r\n            return {\r\n                ...state,\r\n                currentPlanet: {\r\n                    info: action.currentPlanet,\r\n                    residentsName: [state.currentPlanet.residentsName]\r\n                }\r\n            };\r\n        case INITIALIZED_RESIDENTS:\r\n            return {\r\n                ...state,\r\n                currentPlanet: {\r\n                    info: state.currentPlanet.info,\r\n                    residentsName: action.residents\r\n                },\r\n            };\r\n        case CLEAR_STORE:\r\n            return {\r\n                ...state,\r\n                currentPlanet: {\r\n                    info: undefined,\r\n                    residentsName: undefined\r\n                },\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedCurrentPlanet = currentPlanet => ({ type: INITIALIZED_CURRENT_PLANET, currentPlanet });\r\nexport const initializedResidents = residents => ({ type: INITIALIZED_RESIDENTS, residents });\r\nexport const clearStore = () => ({ type: CLEAR_STORE });\r\n\r\nexport const requestCurrentPlanetThunkCreator = (id) => {\r\n    return dispatch => {\r\n        starWarsAPI.getCurrentPlanet(id)\r\n            .then(currentPlanet => {\r\n                dispatch(initializedCurrentPlanet(currentPlanet));\r\n                starWarsAPI.getResidents(currentPlanet.residents)\r\n                    .then(residentsName => { dispatch(initializedResidents(residentsName)) })\r\n                    .catch(erorr => {\r\n                        dispatch(initializedResidents([null]));\r\n                        console.error(erorr);\r\n                    })\r\n            }).catch(erorr => {\r\n                dispatch(initializedCurrentPlanet(null));\r\n                console.error(erorr);\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport default planetReducer;","import React from \"react\";\r\nimport defaultImage from '../../assets/images/defaultPlanet.jpg';\r\nimport classes from './planet.module.css';\r\nimport { planetPopulation } from \"../../assets/scripts/planetPopulation\";\r\nimport CustomImage from \"../Common/Image/Image\";\r\n\r\nconst Planet = props => {\r\n    return <>\r\n        <div className={classes.planet}>\r\n            <CustomImage className={classes.planet__img} src={`https://starwars-visualguide.com/assets/img/planets/${props.id}.jpg`} srcOnError={defaultImage} alt={props.currentPlanet.info.name} />\r\n            <ul className={classes.planet__description}>\r\n                <li>Name: <span>{props.currentPlanet.info.name}</span></li>\r\n                <li>Rotation_period: <span>{props.currentPlanet.info.rotation_period}</span></li>\r\n                <li>Climate: <span>{props.currentPlanet.info.climate}</span></li>\r\n                <li>Gravity: <span>{props.currentPlanet.info.gravity}</span></li>\r\n                <li>Terrain: <span>{props.currentPlanet.info.terrain}</span></li>\r\n                <li>Population: <span>{planetPopulation(props.currentPlanet.info.population)}</span></li>\r\n                <li>Residents: <ul>\r\n                    {props.currentPlanet.residentsName.map((u, i) => <li key={i}>{u}</li>)}</ul>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </>\r\n}\r\n\r\n\r\nexport default Planet;","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { requestCurrentPlanetThunkCreator, clearStore } from \"../../Redux/planet-reducer\";\r\nimport Preloader from \"../Common/Preloader/Preloader\";\r\nimport NotFoundComponent from \"../Common/NotFound/NotFound\";\r\nimport Planet from \"./Planet\";\r\n\r\nconst PlanetContainer = props => {\r\n    let id = props.match.params.id;\r\n    useEffect(() => {\r\n        props.requestCurrentPlanetThunkCreator(id);\r\n        return () => {\r\n            props.clearStore();\r\n        }\r\n    }, [])\r\n\r\n    return <>\r\n        {(props.currentPlanet.info === undefined || props.currentPlanet.residentsName === undefined)\r\n            ? <Preloader />\r\n            : (props.currentPlanet.info === null || props.currentPlanet.residentsName[0] === null) ? <NotFoundComponent /> : <Planet currentPlanet={props.currentPlanet} id={id} />}\r\n    </>\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    currentPlanet: state.currentPlanet.currentPlanet\r\n})\r\n\r\nlet WithUrlDataContainerComponent = withRouter(PlanetContainer);\r\n\r\nexport default connect(mapStateToProps, { requestCurrentPlanetThunkCreator, clearStore })(WithUrlDataContainerComponent);","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport './App.css';\nimport CardContainer from './components/Card/CardContainer';\nimport NotFoundComponent from './components/Common/NotFound/NotFound';\nimport PlanetContainer from './components/Planet/PlanetContainer';\n\nconst App = () => {\n  return (\n    <>\n      <Switch>\n        <Route path=\"/star-wars/planet/:id\" exact={true} render={() => <PlanetContainer />} />\n        <Route path=\"/star-wars/:page?\" exact={true} render={() => <CardContainer />} />\n        <Route render={() => <NotFoundComponent />} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport paginationReducer from \"./pagination-reducer\"\r\nimport planetReducer from \"./planet-reducer\"\r\nimport cardReducer from \"./card-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    planets: cardReducer,\r\n    currentPlanet: planetReducer,\r\n    pagination: paginationReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './Redux/redux-store';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>\n  , document.getElementById('root'));\n\n\nreportWebVitals();"],"sourceRoot":""}